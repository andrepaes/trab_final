version: '3'
services:

  banking:
    build: .
    container_name: banking
    command: bash -c "./run.sh"
    environment: 
      PGUSER: bank_db
      PGPASSWORD: postgres
      PGDATABASE: api_banking_dev
      PGPORT: 5432
      PGHOST: banking_db
    ports:
      - "4000:4000"
    working_dir: /app
    depends_on:
      - banking_db
    networks:
      - backend
    volumes:
      - ./api_banking:/app

  backoffice:
    build: .
    container_name: backoffice
    command: sh -c "./run.sh"
    environment: 
      PGUSER: backoffice_db
      PGPASSWORD: postgres
      PGDATABASE: backoffice_dev
      PGPORT: 5432
      PGHOST: backoffice_db
      TEST_DB: backoffice_db_test
    ports:
      - "5000:5000"
    working_dir: /app
    depends_on:
      - backoffice_db
    networks:
      - backend
    volumes:
      - ./api_banking:/app

  banking_db:
    image: postgres:latest
    environment:
      POSTGRES_USER: bank_db
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: api_banking_dev
      PGDATA: /var/lib/postgresql/data/pgdata
    restart: always
    volumes:
      - /.:/app
      - pgdata_dev:/var/lib/postgresql/data
    networks:
      - backend

  backoffice_db:
    image: postgres:latest
    environment:
      POSTGRES_USER: backoffice_db
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: backoffice_dev
      PGDATA: /var/lib/postgresql/data/pgdata
    restart: always
    volumes:
      - pgdata_test:/var/lib/postgresql/data
    networks:
      - backend

volumes:
  pgdata_test:
  pgdata_dev:

networks:
  backend:
    driver: bridge
